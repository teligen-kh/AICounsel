# AICounsel 프로젝트 개발 진행 상황

## 1. 프로젝트 개요
- 고객 지원 채팅 시스템 개발
- 백엔드: FastAPI
- 프론트엔드: Next.js
- 데이터베이스: MongoDB
- LLM: LLaMA 3.1 8B Instruct

## 2. 개발 완료 사항
### 프론트엔드
- [x] Next.js 프로젝트 초기 설정
- [x] 기본 채팅 UI 구현
- [x] 메시지 전송 기능
- [x] 로딩 애니메이션
- [x] 파일 첨부 기능

### 백엔드
- [x] FastAPI 프로젝트 초기 설정
- [x] MongoDB 연동
- [x] 채팅 메시지 저장/조회 API
- [x] CORS 설정
- [x] LLaMA 3.1 모델 연동
- [x] LangChain 통합

### 데이터베이스
- [x] MongoDB 서버 설정
- [x] 채팅 히스토리 스키마 설계
- [x] 메시지 저장/조회 기능

## 3. 현재 이슈
1. LLM 응답 처리 개선 필요
   - 시스템 프롬프트가 응답에 포함되는 문제
   - 응답 포맷팅 개선 필요

## 4. GitHub 등록 방법

### 1) Git 초기 설정
```bash
git init
git add .
git commit -m "Initial commit: AICounsel project setup"
```

### 2) GitHub 저장소 생성
1. GitHub.com 접속
2. New repository 클릭
3. Repository name: AICounsel
4. Description: AI-powered customer support chat system
5. Public/Private 선택
6. Create repository 클릭

### 3) 로컬 저장소와 GitHub 연결
```bash
git remote add origin https://github.com/[사용자명]/AICounsel.git
git branch -M main
git push -u origin main
```

### 4) .gitignore 설정
```
# Python
__pycache__/
*.py[cod]
*$py.class
venv/
.env

# Node
node_modules/
.next/
.env.local

# IDE
.vscode/
.idea/

# Model files
models/
*.gguf

# Logs
*.log

# Hugging Face
huggingface_token.txt
```

## 5. 다음 개발 계획
1. LLM 응답 처리 개선
   - 프롬프트 템플릿 최적화
   - 응답 포맷팅 개선
2. 채팅 UI 개선
   - 메시지 스타일링
   - 반응형 디자인
3. 에러 처리 강화
   - 사용자 친화적인 에러 메시지
   - 재시도 메커니즘

## 6. 설치된 주요 패키지
### 백엔드
- fastapi==0.109.2
- uvicorn==0.27.1
- pymongo==4.6.1
- langchain==0.1.9
- langchain-community==0.0.27
- langchain-core==0.1.27
- langchain-mongodb==0.6.2
- transformers==4.38.2
- torch==2.2.1
- accelerate==0.27.2

### 프론트엔드
- next==14.1.0
- react==18.2.0
- react-dom==18.2.0
- axios==1.6.7
- tailwindcss==3.4.1

## 7. 실행 방법
1. MongoDB 서버 실행
2. 백엔드 서버 실행
   ```bash
   cd backend
   uvicorn app.main:app --reload
   ```
3. 프론트엔드 서버 실행
   ```bash
   cd frontend
   npm run dev
   ```

## 8. API 엔드포인트
- POST /api/v1/chat: 채팅 메시지 전송
- GET /api/v1/chat/history: 채팅 히스토리 조회 



start "AICounsel Backend" cmd /k "cd backend && python -m uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"

:: Wait for 3 seconds to let backend initialize first
timeout /t 3

:: Start Frontend Server
start "AICounsel Frontend" cmd /k "cd frontend && npm run dev"

echo Servers are starting...
echo Backend: http://localhost:8000
echo Frontend: http://localhost:3000


git status
git add .
git commit -m "인식할 수 있는 개발 내용 적기"
git push -u origin main
